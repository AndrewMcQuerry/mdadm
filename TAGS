
dlink.h,193
struct __dl_head__dl_head5,100
#define	dl_alloc(dl_alloc11,187
#define	dl_new(dl_new12,297
#define	dl_newv(dl_newv13,341
#define dl_next(dl_next15,391
#define dl_prev(dl_prev16,461

md_p.h,1316
#define _MD_P_H16,582
#define MD_RESERVED_BYTES	44,1414
#define MD_RESERVED_SECTORS	45,1453
#define MD_RESERVED_BLOCKS	46,1508
#define MD_NEW_SIZE_SECTORS(MD_NEW_SIZE_SECTORS48,1570
#define MD_NEW_SIZE_BLOCKS(MD_NEW_SIZE_BLOCKS49,1659
#define MD_SB_BYTES	51,1746
#define MD_SB_WORDS	52,1773
#define MD_SB_BLOCKS	53,1813
#define MD_SB_SECTORS	54,1863
#define	MD_SB_GENERIC_OFFSET	59,1960
#define MD_SB_PERSONALITY_OFFSET	60,1992
#define MD_SB_DISKS_OFFSET	61,2028
#define MD_SB_DESCRIPTOR_OFFSET	62,2060
#define MD_SB_GENERIC_CONSTANT_WORDS	64,2098
#define MD_SB_GENERIC_STATE_WORDS	65,2138
#define MD_SB_GENERIC_WORDS	66,2175
#define MD_SB_PERSONALITY_WORDS	67,2263
#define MD_SB_DESCRIPTOR_WORDS	68,2299
#define MD_SB_DISKS	69,2334
#define MD_SB_DISKS_WORDS	70,2359
#define MD_SB_RESERVED_WORDS	71,2423
#define MD_SB_EQUAL_WORDS	72,2553
#define MD_DISK_FAULTY	77,2691
#define MD_DISK_ACTIVE	78,2752
#define MD_DISK_SYNC	79,2814
#define MD_DISK_REMOVED	80,2878
typedef struct mdp_device_descriptor_s mdp_device_descriptor_s82,2946
} mdp_disk_t;mdp_disk_t89,3310
#define MD_SB_MAGIC	91,3325
#define MD_SB_CLEAN	96,3390
#define MD_SB_ERRORS	97,3413
typedef struct mdp_superblock_s mdp_superblock_s99,3438
} mdp_super_t;mdp_super_t164,5820
static inline __u64 md_event(166,5836

md_u.h,1118
#define _MD_U_H16,590
#define RAID_VERSION	21,634
#define GET_ARRAY_INFO	22,693
#define GET_DISK_INFO	23,757
#define PRINT_RAID_DEBUG	24,819
#define RAID_AUTORUN	25,865
#define CLEAR_ARRAY	28,929
#define ADD_NEW_DISK	29,971
#define HOT_REMOVE_DISK	30,1032
#define SET_ARRAY_INFO	31,1078
#define SET_DISK_INFO	32,1142
#define WRITE_RAID_INFO	33,1186
#define UNPROTECT_ARRAY	34,1232
#define PROTECT_ARRAY	35,1278
#define HOT_ADD_DISK	36,1322
#define SET_DISK_FAULTY	37,1365
#define RUN_ARRAY	40,1424
#define START_ARRAY	41,1478
#define STOP_ARRAY	42,1520
#define STOP_ARRAY_RO	43,1561
#define RESTART_ARRAY_RW	44,1605
typedef struct mdu_version_s mdu_version_s46,1652
} mdu_version_t;mdu_version_t50,1724
typedef struct mdu_array_info_s mdu_array_info_s52,1742
} mdu_array_info_t;mdu_array_info_t83,2516
typedef struct mdu_disk_info_s mdu_disk_info_s85,2537
} mdu_disk_info_t;mdu_disk_info_t95,2693
typedef struct mdu_start_info_s mdu_start_info_s97,2713
} mdu_start_info_t;mdu_start_info_t106,2857
typedef struct mdu_param_smdu_param_s108,2878
} mdu_param_t;mdu_param_t113,3014

mdctl.h,826
#define	__USE_LARGEFILE6430,1115
#define	MD_MAJOR 47,1491
#define Name 52,1531
extern char short_options[54,1553
extern struct option long_options[55,1582
extern char Version[56,1619
extern char Version[], Usage[56,1619
extern char Version[], Usage[], Help[56,1619
extern char Version[], Usage[], Help[], Help_create[56,1619
extern char Version[], Usage[], Help[], Help_create[], Help_build[56,1619
extern char Version[], Usage[], Help[], Help_create[], Help_build[], Help_assemble[56,1619
typedef struct mddev_ident_s mddev_ident_s68,2055
} *mddev_ident_t;mddev_ident_t80,2292
typedef struct mddev_dev_s mddev_dev_s83,2359
} *mddev_dev_t;mddev_dev_t86,2431
typedef struct mapping mapping88,2448
} mapping_t;mapping_t91,2496
extern mapping_t r5layout[95,2606
extern mapping_t r5layout[], pers[95,2606

Assemble.c,22
int Assemble(34,1171

Build.c,100
#define REGISTER_DEV 32,1135
#define START_MD 33,1176
#define STOP_MD 34,1217
int Build(36,1259

Create.c,20
int Create(34,1171

Detail.c,20
int Detail(34,1171

Examine.c,21
int Examine(37,1261

Manage.c,161
#define REGISTER_DEV 34,1171
#define START_MD 35,1212
#define STOP_MD 36,1253
int Manage_ro(38,1295
int Manage_runstop(75,2149
int Manage_subdevs(118,3161

ReadMe.c,265
char Version[32,1135
char short_options[81,3222
struct option long_options[82,3280
char Usage[123,4484
char Help[128,4541
char Help_create[185,7233
char Help_build[212,8453
char Help_assemble[225,8993
mapping_t r5layout[284,11939
mapping_t pers[298,12155

config.c,479
char DefaultConfFile[68,2396
char *keywords[70,2441
int match_keyword(77,2640
char *conf_word(97,3148
char *conf_line(163,4739
void free_line(184,5041
struct conf_dev conf_dev195,5183
} *cdevlist 198,5244
int devline(202,5267
mddev_ident_t mddevlist 220,5590
mddev_ident_t *mddevlp 221,5622
void arrayline(223,5660
int loaded 289,7453
void load_conffile(291,7470
mddev_ident_t conf_get_ident(324,7961
mddev_dev_t conf_get_devs(334,8163
int match_oneof(369,8791

dlink.c,177
void *dl_head(11,180
void dl_free(20,289
void dl_init(26,363
void dl_insert(32,430
void dl_add(40,598
void dl_del(48,763
char *dl_strndup(57,969
char *dl_strdup(73,1176

mdctl.c,64
int open_mddev(33,1153
int main(50,1472
#define O(O149,3610

raid5extend.c,39
int phys2log(2,1
raid5_extend(46,902

util.c,573
int parse_uuid(40,1354
int md_get_version(82,2117
int get_linux_version(101,2476
int enough(113,2673
int same_uuid(129,2923
void uuid_from_super(139,3052
int compare_super(153,3329
int load_super(187,4292
int store_super(227,4950
int check_ext2(253,5321
int check_reiser(284,6084
int check_raid(308,6640
int ask(324,7003
char *map_num(344,7368
int map_name(354,7503
struct devmap devmap369,7832
} *devlist 373,7911
int devlist_ready 374,7930
#define  __USE_XOPEN_EXTENDED376,7954
int add_dev(380,8003
char *map_dev(396,8370
int calc_sb_csum(412,8645
